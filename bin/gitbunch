#!/usr/bin/perl

# workaround for dzil
package gitbunch;

use 5.010;
use strict;
use warnings;
BEGIN {
    # reduce startup overhead if being invoked for bash completion
    unless ($ENV{COMP_LINE}) {
        no warnings; $::LOG_LEVEL = 'info';
        require Log::Any::App;
        # older Log::Any::App (< 0.26) which croaks when import() is not called
        Log::Any::App->import();
    }
}

# VERSION

use Sub::Spec::CmdLine qw(run);
run(
    module => 'Git::Bunch',
    subcommands => {
        check  => { sub => 'check_bunch'  },
        sync   => { sub => 'sync_bunch'   },
        backup => { sub => 'backup_bunch' },
        exec   => { sub => 'exec_bunch'   },
    }
);

__END__

=head1 NAME

gitbunch - Manage gitbunch directory (directory which contain git repos)

=head1 DESCRIPTION

See L<Git::Bunch> for more documentation.

=head1 FAQ

=head2 How to see more verbose/debugging output?

B<gitbunch> uses L<Log::Any::App>. You can customize logging levels using a
variety of ways, e.g. environment variable:

 % TRACE=1 gitbunch ...

By default it also writes log to ~/gitbunch.log. You can disable this using:

 % FILE_LOG_LEVEL=off gitbunch ...

Or you can customize the level using:

 % FILE_QUIET=1 gitbunch ...

See the documentation for Log::Any::App for more details.

=cut
