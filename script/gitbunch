#!perl

use 5.010001;
use strict;
use warnings;

use Perinci::CmdLine::Any;

# AUTHORITY
# DATE
# DIST
# VERSION

Perinci::CmdLine::Any->new(
    url => '/Git/Bunch/',
    subcommands => {
        check  => { url => '/Git/Bunch/check_bunch' },
        commit => { url => '/Git/Bunch/commit_bunch' },
        exec   => { url => '/Git/Bunch/exec_bunch' },
        ls     => { url => '/Git/Bunch/list_bunch_contents' },
        sync   => { url => '/Git/Bunch/sync_bunch' },
    },
    log => 1,
)->run;

1;
# ABSTRACT:
# PODNAME:

=head1 SYNOPSIS

To check the status of bunch (will do a 'git status' for each git repo inside
the bunch and report which repos are 'unclean', e.g. needs commit, has untracked
files, etc):

 % gitbunch check ~/repos

To synchronize bunch to another (will do a 'git pull/push' for each git repo,
and do an rsync for everything else):

 % gitbunch sync ~/repos /mnt/laptop/repos


=head1 DESCRIPTION

A (git)bunch is a directory that contains a bunch of git repositories (as well
as dot non-git directories and regular files). This B<gitbunch> utility can help
you perform actions on some/all of the repositories in the bunch.


=head1 append:SEE ALSO

Other tools on CPAN to make it easier to manage multiple git repositories:
L<got> from L<App::GitGot>, L<group-git> from L<Group::Git>.
